property{
	define {	
		// B.1
		undercurrentsAboveLimit = theMap.undercurrent > 4;
		// Ship1
		ship1InsideTrafficZone = theMap.ship1_inside_traffic_zone;
		ship1containsHazardous = s1.contains_hazardous;
		// Is fast enough even if hazardous
		ship1isFastEnough = s1.ship_velocity > 10;
		
		// Ship 2
		ship2InsideTrafficZone = theMap.ship2_inside_traffic_zone;
		ship2containsHazardous = s2.contains_hazardous;
		// Is fast enough even if hazardous
		ship2isFastEnough = s2.ship_velocity > 10;
	}
	//Om assertion är false löser den ut
	Assertion {
		// B.1 second
		s1HazardousVesselB1: (!ship1InsideTrafficZone || (!(ship1containsHazardous && undercurrentsAboveLimit) || ship1isFastEnough));	
		s2HazardousVesselB1: (!ship2InsideTrafficZone || (!(ship2containsHazardous && undercurrentsAboveLimit) || ship2isFastEnough));	
	}
}