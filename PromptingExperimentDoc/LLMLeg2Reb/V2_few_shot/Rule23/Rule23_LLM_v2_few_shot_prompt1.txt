
============= PROMPT =============
According to prompt file per rule and version.
_______________________________________________________________________________

============= COMPLETE LLM OUTPUT =============
Here is the **Rebeca property file** that models the three **COLREG Rule 23 clauses** from the Legata domain language, with the correct mapping and logical assertions as required:

---

### ✅ Rebeca Property File

```rebeca
property {
	define {
		ship1isPowerDriven = s1.vessel_type_powerdriven;
		ship1isUnderway = s1.underway;
		ship1isOver12m = s1.ship_length >= 12;
		ship1isOver50m = s1.ship_length >= 50;

		ship1hasMastheadForwardLight = s1.masthead_forward_light_on;
		ship1hasMastheadAbaftLight = s1.masthead_abaft_light_on;
		ship1hasSideLight = s1.side_light_on;
		ship1hasSternLight = s1.stern_light_on;
		ship1hasAllroundWhiteLight = s1.allround_light_on;

		ship2isPowerDriven = s2.vessel_type_powerdriven;
		ship2isUnderway = s2.underway;
		ship2isOver12m = s2.ship_length >= 12;
		ship2isOver50m = s2.ship_length >= 50;

		ship2hasMastheadForwardLight = s2.masthead_forward_light_on;
		ship2hasMastheadAbaftLight = s2.masthead_abaft_light_on;
		ship2hasSideLight = s2.side_light_on;
		ship2hasSternLight = s2.stern_light_on;
		ship2hasAllroundWhiteLight = s2.allround_light_on;
	}

	Assertion {
		// Rule 23.a — General lighting for power-driven vessels underway and >= 12m
		s1Rule23a: !(ship1isPowerDriven && ship1isUnderway && ship1isOver12m) 
			|| (ship1hasMastheadForwardLight && ship1hasSideLight && ship1hasSternLight);

		s2Rule23a: !(ship2isPowerDriven && ship2isUnderway && ship2isOver12m) 
			|| (ship2hasMastheadForwardLight && ship2hasSideLight && ship2hasSternLight);

		// Rule 23.a.ii — Abaft masthead light for power-driven vessels >= 50m
		s1Rule23a_ii: !(ship1isPowerDriven && ship1isUnderway && ship1isOver50m) 
			|| ship1hasMastheadAbaftLight;

		s2Rule23a_ii: !(ship2isPowerDriven && ship2isUnderway && ship2isOver50m) 
			|| ship2hasMastheadAbaftLight;

		// Rule 23.d.i — Small vessels (<12m) may exhibit all-round white + sidelights instead
		s1Rule23d_i: !(ship1isPowerDriven && ship1isUnderway && !ship1isOver12m)
			|| (ship1hasAllroundWhiteLight && ship1hasSideLight);

		s2Rule23d_i: !(ship2isPowerDriven && ship2isUnderway && !ship2isOver12m)
			|| (ship2hasAllroundWhiteLight && ship2hasSideLight);
	}
}
```

---

### ✅ Explanation of Legata Clause Semantics and Mapping

**Legata Clause Summary:**

* **Rule 23.a**: Power-driven vessels underway must display:

  * Masthead forward light
  * Sidelights
  * Sternlight
  * (Abaft masthead light if vessel ≥ 50m)
* **Rule 23.d.i**: Vessels <12m may instead show an all-round white light and sidelights.
* These apply **only** when the vessel is both **power-driven** and **underway**.

---

### ✅ Mapping Legata Attributes to Rebeca Variables

| Legata Attribute                               | Rebeca Property Variable                  |
| ---------------------------------------------- | ----------------------------------------- |
| `OS.Type is Vessel.Type.PowerDriven`           | `s1.vessel_type_powerdriven`              |
| `OS.Operation has 'UNDERWAY'`                  | `s1.underway`                             |
| `OS.Length < meters(12)`                       | `s1.ship_length < 12` → `!ship1isOver12m` |
| `OS.Length < meters(50)`                       | `s1.ship_length < 50` → `!ship1isOver50m` |
| `OS.Signal.ON has 'Light.Masthead.Forward.1x'` | `s1.masthead_forward_light_on`            |
| `OS.Signal.ON has 'Light.Masthead.Abaft'`      | `s1.masthead_abaft_light_on`              |
| `OS.Signal.ON has 'Light.Sidelight'`           | `s1.side_light_on`                        |
| `OS.Signal.ON has 'Light.Sternlight'`          | `s1.stern_light_on`                       |
| `OS.Signal.ON has 'Light.Allround.White'`      | `s1.allround_light_on`                    |

Each clause is transformed into an **assertion** that ensures:

* If the **conditions** are true (e.g. the vessel is power-driven and underway, and the length requirements are met), then the **lighting configuration** (assure part) must also be satisfied.
* If any **condition fails**, the assertion trivially holds (e.g. not power-driven, not underway, or doesn't meet length condition → no requirement).

Would you like the same logic extended to support **additional ship objects or other COLREG rules**?



_______________________________________________________________________________

============= CRITERIA EVALUATION =============
Total points: x/10

1. Is the syntax correct, so that we can run the proposed Rebeca property, without changes? (Yes=1p, No=0p)
Answer: 
Points:

2. Are all relevant attributes included? (0%-<33%=0p, >=33%-<67%=1p, >=67%-<100%=2p, 100%=3p) (0%-<33%=0p, >=33%-<67%=1p, >=67%-<100%=2p, 100%=3p)
Answer: 
Points:

3. Are correctness properties created for all relevant actors? (All = 2p, deduct 1p for each missing actor) (All = 2p, deduct 1p for each missing actor)
Answer: 
Points:

4. Is the output code free from hallucinations (e.g. any irrelevant code added)? (1p)
Answer: 
Points:

5. Is the logic correct? (3p (Correct: 2p, Partially correct: 1p) + (Full expression:1p))
Answer: 
Points:

_______________________________________________________________________________


============= COMMENT =============
<Comment what was required to be modified (if anything) or anything else that is worth mentioning>


_______________________________________________________________________________
