
============= PROMPT =============
According to prompt file per rule and version.
_______________________________________________________________________________

============= COMPLETE LLM OUTPUT =============
Here is the **Rebeca property file** that represents the **Legata clause `Istanbul.Strait.Rule3.LargeVessel`**:

---

### âœ… **Rebeca Property File:**

```rebeca
property {
	define {
		ShipIsLong = (s1.ship_length > 150);
		ShipIsDeep = (s1.ship_draught > 10);
		StrongUndercurrent = (theMap.undercurrent > 4);
		ShipIsFast = (s1.ship_velocity > 10);
	}

	Assertion {
		LargeVesselMustBeFast:
		((ShipIsLong && StrongUndercurrent) || (ShipIsDeep && StrongUndercurrent)) && ShipIsFast;
	}
}
```

---

### ðŸ“œ **Semantic Meaning of the Legata Clause:**

The **Legata clause `Istanbul.Strait.Rule3.LargeVessel`** models a regulatory rule that applies to **Own Ships (OS)** â€” that is, the ship under evaluation, in this case mapped to `s1` in Rebeca.

The clause defines a **compliance requirement** for **large vessels** navigating in an area with strong undercurrents. It specifies two distinct **conditions**, each of which is sufficient to trigger the requirement (i.e., an OR logic between the conditions):

- If a ship is **longer than 150 meters** and the **undercurrent is stronger than 4 knots**, OR  
- If a ship has a **draught (depth) greater than 10 meters** and the **undercurrent is stronger than 4 knots**,  
â‡’ Then the ship must be traveling **faster than 10 knots**.

In simpler terms: **Large and heavy ships in strong undercurrents must maintain a high enough speed (over 10 knots)** â€” likely for safety and control reasons.

---

### ðŸ”„ **Mapping from Legata Clause to Rebeca Property:**

| **Legata Term**                    | **Mapped Rebeca Variable**             | **Explanation**                                 |
|-----------------------------------|----------------------------------------|-------------------------------------------------|
| `OS.Length > meters(150)`         | `s1.ship_length > 150`                 | `s1` is the OwnShip; length is modeled directly |
| `OS.Draught > meters(10)`         | `s1.ship_draught > 10`                 | Draught of the ship                             |
| `OS.Undercurrent > kn(4)`         | `theMap.undercurrent > 4`             | MapServer tracks environmental undercurrent     |
| `OS.Velocity > kn(10)`            | `s1.ship_velocity > 10`                | Required speed threshold                        |

---

Would you like me to generate the **same property for a different ship (e.g. `s2`)** or convert **another Legata clause**?


_______________________________________________________________________________

============= CRITERIA EVALUATION =============
Total points: x/10

1. Is the syntax correct, so that we can run the proposed Rebeca property, without changes? (Yes=1p, No=0p)
Answer: 

2. Are all relevant attributes included? (0%-<33%=0p, >=33%-<67%=1p, >=67%-<100%=2p, 100%=3p) (0%-<33%=0p, >=33%-<67%=1p, >=67%-<100%=2p, 100%=3p)
Answer: 
Points:

3. Are correctness properties created for all relevant actors? (All = 2p, deduct 1p for each missing actor) (All = 2p, deduct 1p for each missing actor)
Answer: 
Points:

4. Is the output code free from hallucinations (e.g. any irrelevant code added)? (1p) (1p)
Answer: 
Points:

5. Is the logic correct? (3p (Correct: 2p, Partially correct: 1p) + (Full expression:1p))
Answer: 
Points:

_______________________________________________________________________________


============= COMMENT =============
<Comment what was required to be modified (if anything) or anything else that is worth mentioning>


_______________________________________________________________________________
