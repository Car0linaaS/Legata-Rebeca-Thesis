
============= PROMPT =============
According to prompt file per rule and version.
_______________________________________________________________________________

============= COMPLETE LLM OUTPUT =============
Here is the **Rebeca property file** that represents the Legata clause `Istanbul.Strait.Rule3.DangerousCargo`:

```rebeca
property {
    define {
        Ship1_Has_Hazardous_Cargo = (s1.contains_hazardous == true);
        Undercurrent_High = (theMap.undercurrent > 4);
        Ship1_High_Speed = (s1.ship_velocity > 10);
    }

    Assertion {
        DangerousCargoSpeedCompliance: (!(Ship1_Has_Hazardous_Cargo && Undercurrent_High) || Ship1_High_Speed);
    }
}
```

---

### âœ… **Semantic Explanation of the Legata Clause**

**Legata Clause Name:** `Istanbul.Strait.Rule3.DangerousCargo`  
**Intended Meaning:**
> If the *own ship* is carrying **hazardous material** and the **undercurrent is stronger than 4 knots**, then the **ship must be traveling faster than 10 knots** to maintain safety in the strait.

This rule is likely motivated by safety and maneuverability requirements in strong currents, particularly for vessels carrying dangerous cargo.

---

### ðŸ”„ **Mapping from Legata to Rebeca Property**

| **Legata Component**                          | **Rebeca Equivalent**                                    |
|----------------------------------------------|----------------------------------------------------------|
| `OS.Cargo in ['HazardousMaterial']`          | `s1.contains_hazardous == true`                          |
| `OS.Undercurrent > kn(4)`                    | `theMap.undercurrent > 4`                                |
| `OS.Velocity > kn(10)`                       | `s1.ship_velocity > 10`                                  |

- `OS` (OwnShip) is mapped to the actor `s1`, the ship we are observing.
- `contains_hazardous` is a boolean state variable representing if the ship carries hazardous cargo.
- `undercurrent` is maintained by `MapServer`, and is assumed to be measured in knots.
- `ship_velocity` is directly compared to 10 knots.

---

### ðŸ§  Logic of the Assertion

The assertion uses logical equivalence:  
> **If** ship carries hazardous cargo **and** undercurrent is strong, **then** its speed must be >10 knots.

This is represented as:

```rebeca
!(Ship1_Has_Hazardous_Cargo && Undercurrent_High) || Ship1_High_Speed
```

Which is logically equivalent to:

```text
IF (Hazardous AND Strong Undercurrent)
THEN (High Speed)
```

Let me know if you'd like this applied to a second clause or extended to handle `s2` or other traffic rules.


_______________________________________________________________________________


============= LLM PROPERTY TRANSFORMATION =============
<The suggested property tranformation from the LLM extracted from the output>


_______________________________________________________________________________

============= CRITERIA EVALUATION =============
Number of fulfilled criteria: x

1. Can we run the proposed Rebeca property, with the model code?
Answer: 

2. Is the logic correct?
Answer:

3. Is the syntax correct?
Answer:

4. Are all relevant attributes included?
Answer:

5. Are correctness properties created for all actors?
Answer:

6. Is the output code free from hallucinations (e.g. any irrelevant code added)?
Answer:

_______________________________________________________________________________


============= COMMENT =============
<Comment what was required to be modified (if anything) or anything else that is worth mentioning>


_______________________________________________________________________________
