property{
	define {
		onTarget1 = r1.distance2target <=r1.target_tolerance; //r1.rx==r1.targetX && r1.ry==r1.targetY;
		done1 = r1.moves[0]>0 && r1.moves[0]-r1.moveidx<=r1.target_tolerance;
		
		onTarget2 = r2.distance2target <=r2.target_tolerance; //r2.rx==r2.targetX && r2.ry==r2.targetY;
		done2 = r2.moves[0]>0 && r2.moves[0]-r2.moveidx<=r2.target_tolerance;		



//		minVisRange = vtsController.minVisRange;
		//ownShipVisibilityRange = OwnShip.visRange;
	
		// Good if FALSE
		//distanceToShip = OwnShip.distance.nearestShip <= Area.Near.ProximityRange;
		
		// Good if TRUE
		//visibilityRange = ownShipVisibilityRange > minVisRange
		
	}
	
	Assertion{
	//	Safety: !distanceToShip || visibilityRange
	
		reached_all: 
		  (!(done1 && onTarget1) || !(done2 && onTarget2)) ^ ((done1 && onTarget1) && (done2 && onTarget2));		
	}
}